services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: cluster_planner
      POSTGRES_PASSWORD: PAssw0rd
      POSTGRES_DB: cluster
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U cluster_planner -d cluster" ]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - ./backend/.env
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "3001:3001"
    command: [ "./start.sh" ]

  nginx:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    env_file:
      - ./frontend/.env
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
    ports:
      - "3000:80" # Nginx внутри контейнера слушает 80

volumes:
  postgres_data:
